/*
* This is an example of data classes.
* You can see the deference between Normal DTO class and a data class.
* They are doing the same job.
* */

// Normal class.
class Developer(
    private val name: String,
    private val age: Int,
    private val language: String = "Kotlin"
) {
    // 1 - Override the toString functions.
    override fun toString(): String {
        return "$age years old $name. Codes with $language."
    }

    // 2- Override the equals function.
    override fun equals(other: Any?): Boolean {
        // 3 - Usage of "is" to check the instance class.
        return if (other is Developer)
            name == other.name &&
                    age == other.age &&
                    language == other.language
        else
            false
    }

    // This hashcode automatically generated by IntelliJ.
    override fun hashCode(): Int {
        var result = name.hashCode()
        result = 31 * result + age
        result = 31 * result + language.hashCode()
        return result
    }
}

// 5 - A simple data class in one line does the same job!
// 7 - Parameters must have "val / var"
data class DataDeveloper(val name: String, val age: Int, val language: String = "Kotlin")

fun main() {
    // Test normal class.
    val devsGroup1 = listOf(
        Developer("Mahdi", 18),
        Developer("Ellie", 28, "C++"),
        Developer("Nathan", 23, "Python"),
        Developer("Ellie", 28, "C++")
    )
    for (dev in devsGroup1)
        println(dev)

    println(
        "---> Is ${devsGroup1[1]} is equal to ${devsGroup1[3]}?" +
                " ${devsGroup1[1] == devsGroup1[3]}"
    )

    // Test data classes.
    val devsGroup2 = listOf(
        DataDeveloper("John", 18),
        DataDeveloper("Sarah", 20, "C#"),
        DataDeveloper("Elon", 26, "Java"),
        DataDeveloper("Sarah", 20, "C#")
    )
    for (dev in devsGroup2)
        println(dev)

    println(
        "---> Is ${devsGroup2[1]} is equal to ${devsGroup2[3]}?" +
                " ${devsGroup2[1] == devsGroup2[3]}"
    )

    // 6 - Copy an object in data classes.
    val newDev = devsGroup2[0].copy(name = "David")
    println(newDev)
}